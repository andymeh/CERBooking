@model CERBookingSystem.Models.SearchModel
@{
    ViewBag.Title = "Home Page";
}
@using (Html.BeginForm("Search", "Home", FormMethod.Post, new { autocomplete = "off" }))
{
    @Html.AntiForgeryToken()
    <div class="jumbotron" style="background-color:#FFA500; background-size: cover">
         <div class="container center-block" >
            <div class="form-group">
                <div class="row">
                    <div class="col-md-6">
                        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                        @Html.LabelFor(model => model.bookingDetails.sourceCityId, htmlAttributes: new { @class = "control-label" })
                        <div id="prefetch">
                            @Html.DropDownListFor(model => model.bookingDetails.sourceCityId, Model.CityListItems, new { @class = "form-control" })
                            @Html.ValidationMessageFor(model => model.bookingDetails.sourceCityId, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="col-md-6 selectContainer">
                        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                        @Html.LabelFor(model => model.bookingDetails.destinationCityId, htmlAttributes: new { @class = "control-label" })
                        <div id="prefetch">
                            @Html.DropDownListFor(model => model.bookingDetails.destinationCityId, Model.CityListItems, new { @class = "form-control"})
                            @Html.ValidationMessageFor(model => model.bookingDetails.destinationCityId, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>
            </div>
            <div class="form-group">
                <div class="row">
                    <div class="col-md-6">
                        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                        @Html.LabelFor(model => model.bookingDetails.dateOutbound, htmlAttributes: new { @class = "control-label" })
                        <div id="prefetch">
                            @Html.EditorFor(model => model.bookingDetails.dateOutbound, new { htmlAttributes = new { @id = "datetimepicker4", @class = "form-control", @placeholder = "Depart" } })
                            @Html.ValidationMessageFor(model => model.bookingDetails.dateOutbound, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="col-md-6 selectContainer">
                        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                        @Html.LabelFor(model => model.bookingDetails.dateReturn, htmlAttributes: new { @class = "control-label" })
                        <div id="prefetch">
                            @Html.EditorFor(model => model.bookingDetails.dateReturn, new { htmlAttributes = new { @id = "datetimepicker5", @class = "form-control", @placeholder = "Return" } })
                            @Html.ValidationMessageFor(model => model.bookingDetails.dateReturn, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>
            </div>
            <div class="form-group">
                <div class="row">
                    <div class="col-md-6">
                        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                        @Html.LabelFor(model => model.bookingDetails.firstClass, htmlAttributes: new { @class = "control-label" })
                        <div>
                            <input id="firstClassCheck"type="checkbox" checked data-toggle="toggle" data-off="Economy" data-on="First"  data-onstyle="success" >
                            @Html.HiddenFor(model => model.bookingDetails.firstClass, new { id = "firstClassField" })
                            @Html.ValidationMessageFor(model => model.bookingDetails.firstClass, "", new { @class = "text-danger" })
                        </div>

                    </div>

                    <div class="col-md-6 ">
                        @Html.LabelFor(model => model.bookingDetails.numberOfPassengers, htmlAttributes: new { @class = "control-label" })
                        <div>
                            @Html.DropDownListFor(model => model.bookingDetails.numberOfPassengers, Enumerable.Range(1, 10).Select(i => new SelectListItem { Text = i.ToString(), Value = i.ToString() }), new { @class = "form-control" })
                            @Html.ValidationMessageFor(model => model.bookingDetails.numberOfPassengers, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>
            </div>



            <div class="form-group">
                <div class="col-md-10 col-md-offset-2">
                    <input type="submit" value="Search" class="btn btn-default" />
                </div>
            </div>
        </div>
    </div>
    
    
   
}


            @section scripts{
            <script type="text/javascript">
            $(function () {
                $('#datetimepicker4').datetimepicker({
                    locale: 'en-GB',
                    format: 'DD/MM/YYYY'
                });
                $('#datetimepicker5').datetimepicker({
                    useCurrent: false, //Important! See issue #1075
                    locale: 'en-GB',
                    format: 'DD/MM/YYYY'
                });
                $("#datetimepicker4").on("dp.change", function (e) {
                    $('#datetimepicker5').data("DateTimePicker").minDate(e.date);
                });
                $("#datetimepicker5").on("dp.change", function (e) {
                    $('#datetimepicker4').data("DateTimePicker").maxDate(e.date);
                });
            });
            $(function () {
                $('#firstClassField').val(true)
                $('#firstClassCheck').bootstrapToggle({
                    on:'True',
                    off: 'False'
                });
                $('#firstClassCheck').change(function () {
                    var myBool = Boolean($(this).prop('checked'));
                    $('#firstClassField').val(myBool)
                })

            })
        </script>
}
