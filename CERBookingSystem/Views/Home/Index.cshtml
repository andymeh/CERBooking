@model CERBookingSystem.Models.SearchModel
@{
    ViewBag.Title = "Home Page";

}
@using (Html.BeginForm("Search", "Home", FormMethod.Post, new { autocomplete = "off" }))
{
    @Html.AntiForgeryToken()
    
    <div class="jumbotron" style="background-image: url('@Url.Content("~/Content/railroad.jpg")'); background-size: cover; color:black ">
         <div class="container " >
               <div class="form-group">
                <div class="row">
                    <div class="col-md-6">
                        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                        @Html.LabelFor(model => model.bookingDetails.sourceCityId, htmlAttributes: new { @class = "control-label", @id="sourceCity"})
                        <div id="prefetch">
                            @Html.DropDownListFor(model => model.bookingDetails.sourceCityId, Model.CityListItems, new { @class = "form-control" })
                            @Html.ValidationMessageFor(model => model.bookingDetails.sourceCityId, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="col-md-6 selectContainer">
                        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                        @Html.LabelFor(model => model.bookingDetails.destinationCityId, htmlAttributes: new { @class = "control-label" })
                        <div id="prefetch">
                            @Html.DropDownListFor(model => model.bookingDetails.destinationCityId, Model.CityListItems, new { @class = "form-control" ,@id= "destinationCity"})
                            @Html.ValidationMessageFor(model => model.bookingDetails.destinationCityId, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>
            </div>
            <div class="form-group">
                <div class="row">
                    <div class="col-md-6">
                        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                        @Html.LabelFor(model => model.bookingDetails.dateOutbound, htmlAttributes: new { @class = "control-label" })
                        <div id="prefetch">
                            @Html.EditorFor(model => model.bookingDetails.dateOutbound, new { htmlAttributes = new { @id = "datetimepicker4", @class = "form-control", @readonly = "true", @placeholder = "Depart" } })
                            @Html.ValidationMessageFor(model => model.bookingDetails.dateOutbound, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="col-md-6 selectContainer">
                        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                        @Html.LabelFor(model => model.bookingDetails.dateReturn, htmlAttributes: new { @class = "control-label"})
                        <div id="prefetch">
                            @Html.EditorFor(model => model.bookingDetails.dateReturn, new { htmlAttributes = new { @id = "datetimepicker5", @class = "form-control",@readonly="true", @placeholder = "Return" } })
                            @Html.ValidationMessageFor(model => model.bookingDetails.dateReturn, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>
            </div>
            <div class="form-group">
                <div class="row">
                    <div class="col-md-6">
                        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                        @Html.LabelFor(model => model.bookingDetails.firstClass, htmlAttributes: new { @class = "control-label" })
                        <div>
                            <input id="firstClassCheck" type="checkbox" data-toggle="toggle" data-off="Economy" data-on="First"  data-onstyle="success" >
                            @Html.HiddenFor(model => model.bookingDetails.firstClass, new { id = "firstClassField" })
                            @Html.ValidationMessageFor(model => model.bookingDetails.firstClass, "", new { @class = "text-danger" })
                        </div>

                    </div>

                    <div class="col-md-6 ">
                        @Html.LabelFor(model => model.bookingDetails.numberOfPassengers, htmlAttributes: new { @class = "control-label" })
                        <div>
                            @Html.DropDownListFor(model => model.bookingDetails.numberOfPassengers, Enumerable.Range(1, 10).Select(i => new SelectListItem { Text = i.ToString(), Value = i.ToString() }), new { @class = "form-control" })
                            @Html.ValidationMessageFor(model => model.bookingDetails.numberOfPassengers, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>
            </div>



            <div class="form-group">
                <div class="col-md-10 col-md-offset-2">
                    <input type="submit" value="Search" class="btn btn-default" />
                </div>
            </div>
        </div>
   
    </div>

    <div class="row">
        <div class="col-md-4">
            <div class="panel panel-info">
                <div class="panel-heading">
                    <h4 class="panel-title">Beijing</h4>
                </div>
                <div class="panel-body mypanel" style="word-wrap:break-word">
                    <img class="img-responsive" src="~/Content/forbidden_city_Bejing.jpg" />
                    <br />
                    <p>Beijing (北京), the capital of China, is looking much more into the future than into the past. Nowadays, it is a city crowded with tourists from China and all over the world. But just a stone's throw away in the past, the city was hardly ever visited by any foreigners. Since 1989, many things have changed and Beijing has been growing into a huge metropolitan area with around 16 million people living on a vast, expanding area. The old residential neighbourhoods, the Hutongs, have been almost entirely replaced by apartment buildings and shopping malls and the road system seems to change almost every day!</p>
                </div>

            </div>
        </div>
        <div class="col-md-4">
            <div class="panel panel-success">
                <div class="panel-heading">
                    <h4 class="panel-title">Quingdao</h4>
                </div>
                <div class="panel-body mypanel" style="word-wrap:break-word">
                    <img class="img-responsive" src="~/Content/qingdao2.jpg" />
                    <br />
                    <p>Qingdao (青岛) is a port city in the northwestern province of Shandong in China. It is especially famous for its cobbled streets and partly Bavarian look, mixed with a new Chinese skyline due to it's German colonial history. Churches and European style houses dominate the city centre. Another important heritage from the Germans was beer. Qingdao is home to the famous Tsingtao (the old western name for this city) beer, where it is possible to tour the factory (and sample some beer). Anyone who has been in China long enough has drunk Tsingtao beer.</p>
                </div>
                
            </div>

        </div>
            <div class="col-md-4">
                <div class="panel panel-primary">
                    <div class="panel-heading">
                        <h4 class="panel-title">Tianjin</h4>
                    </div>
                    <div class="panel-body mypanel" style="word-wrap:break-word">
                        <img class="img-responsive" src="~/Content/Tianjin2.jpg" />
                        <br />
                        <p>Tianjin (天津) is the sixth largest city in China by population. It is one of only four directly controlled municipalities enjoying provincial-like status as Special Economic Zone (SEZ). (The other three are Beijing, Shanghai and Chongqing). It is a large modern city with the outskirts dominated by industry. It is also a port city and in 2005, a section of Tianjin was awarded Special Economic Zone (SEZ) status.</p>
                    </div>
                </div>
            </div>
    </div>

}


            @section scripts{
            <script type="text/javascript">
            $(function () {
                $('#datetimepicker4').datetimepicker({
                    minDate: moment(),
                    locale: 'en-GB',
                    format: 'DD/MM/YYYY',
                    ignoreReadonly: true
                });
                $('#datetimepicker5').datetimepicker({
                    useCurrent: false, //Important! See issue #1075
                    locale: 'en-GB',
                    format: 'DD/MM/YYYY',
                    ignoreReadonly: true
                });
                $("#datetimepicker4").on("dp.change", function (e) {
                    $('#datetimepicker5').data("DateTimePicker").minDate(e.date);
                });
                $("#datetimepicker5").on("dp.change", function (e) {
                    $('#datetimepicker4').data("DateTimePicker").maxDate(e.date);
                });
            });
            $(function () {
                $('#firstClassField').val(true)
                $('#firstClassCheck').bootstrapToggle({
                    on:'True',
                    off: 'False'
                });
                $('#firstClassCheck').change(function () {
                    var myBool = Boolean($(this).prop('checked'));
                    $('#firstClassField').val(myBool)
                })

            })
        </script>
                <script>
                    
                    $(function () {
                        $('#sourceCity').change(function () {
                            var districtId = $(this).val();


                            $.ajax({
                                url: 'Home/GetCities',
                                type: 'POST',
                                data: JSON.stringify({ districtId: districtId }),
                                dataType: 'json',
                                contentType: 'application/json',
                                error: function (xhr) {
                                    alert('Error: ' + xhr.statusText);
                                },
                                success: function (data) {
                                    alert('Error: ' + xhr.statusText);
                                    $.each(data, function (key, TMManagers) {
                                        $('#destinationCity').append('<option value="0">Select One</option>');
                                        // loop through the TM Managers and fill the dropdown
                                        $.each(TMManagers, function (index, manager) {
                                            $('select#destinationCity').append(
                                                '<option value="' + manager.Id + '">'
                                                + manager.Name +
                                                '</option>');
                                        });
                                    });
                                }
                            });
                        });
                    });
                </script>
}
